<?php

use Composer\Autoload\ClassLoader;
use Composer\Autoload\ComposerStaticInit54136aaf8002909f10e7c088c37da7bf;

/**
 * Autoload_real.php @generated by Composer.
 */
class ComposerAutoloaderInit54136aaf8002909f10e7c088c37da7bf {
  private static $loader;

  /**
   *
   */
  public static function loadClassLoader($class) {
    if ('Composer\Autoload\ClassLoader' === $class) {
      require __DIR__ . '/ClassLoader.php';
    }
  }

  /**
   * @return \Composer\Autoload\ClassLoader
   */
  public static function getLoader() {
    if (NULL !== self::$loader) {
      return self::$loader;
    }

    require __DIR__ . '/platform_check.php';

    spl_autoload_register(['ComposerAutoloaderInit54136aaf8002909f10e7c088c37da7bf', 'loadClassLoader'], TRUE, TRUE);
    self::$loader = $loader = new ClassLoader(\dirname(__DIR__));
    spl_autoload_unregister(['ComposerAutoloaderInit54136aaf8002909f10e7c088c37da7bf', 'loadClassLoader']);

    require __DIR__ . '/autoload_static.php';
    call_user_func(ComposerStaticInit54136aaf8002909f10e7c088c37da7bf::getInitializer($loader));

    $loader->register(TRUE);

    $filesToLoad = ComposerStaticInit54136aaf8002909f10e7c088c37da7bf::$files;
    $requireFile = \Closure::bind(static function ($fileIdentifier, $file) {
      if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
            $GLOBALS['__composer_autoload_files'][$fileIdentifier] = TRUE;

            require $file;
      }
    }, NULL, NULL);
    foreach ($filesToLoad as $fileIdentifier => $file) {
      $requireFile($fileIdentifier, $file);
    }

    return $loader;
  }

}
